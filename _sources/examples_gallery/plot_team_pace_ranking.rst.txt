
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples_gallery/plot_team_pace_ranking.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_plot_team_pace_ranking.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_plot_team_pace_ranking.py:

Team Pace Comparison
=============================================
Rank team's race pace from the fastest to the slowest.

.. GENERATED FROM PYTHON SOURCE LINES 5-16

.. code-block:: Python


    import seaborn as sns
    from matplotlib import pyplot as plt

    import fastf1
    import fastf1.plotting


    # activate the fastf1 color scheme (and no other modifications)
    fastf1.plotting.setup_mpl(mpl_timedelta_support=False, misc_mpl_mods=False)








.. GENERATED FROM PYTHON SOURCE LINES 17-20

Load the race session.
Pick all quick laps (within 107% of fastest lap).
For races with mixed conditions, pick_wo_box() is better.

.. GENERATED FROM PYTHON SOURCE LINES 20-24

.. code-block:: Python

    race = fastf1.get_session(2023, "British Grand Prix", 'R')
    race.load()
    laps = race.laps.pick_quicklaps()








.. GENERATED FROM PYTHON SOURCE LINES 25-29

Convert the lap time column from timedelta to integer.
This is a seaborn-specific modification.
If plotting with matplotlib, set mpl_timedelta_support to true
with plotting.setup_mpl.

.. GENERATED FROM PYTHON SOURCE LINES 29-45

.. code-block:: Python

    transformed_laps = laps.copy()
    transformed_laps.loc[:, "LapTime (s)"] = laps["LapTime"].dt.total_seconds()

    # order the team from the fastest (lowest median lap time) tp slower
    team_order = (
        transformed_laps[["Team", "LapTime (s)"]]
        .groupby("Team")
        .median()["LapTime (s)"]
        .sort_values()
        .index
    )
    print(team_order)

    # make a color palette associating team names to hex codes
    team_palette = {team: fastf1.plotting.team_color(team) for team in team_order}





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Index(['Red Bull Racing', 'McLaren', 'Mercedes', 'Ferrari', 'Aston Martin',
           'AlphaTauri', 'Williams', 'Alpine', 'Alfa Romeo', 'Haas F1 Team'],
          dtype='object', name='Team')




.. GENERATED FROM PYTHON SOURCE LINES 46-67

.. code-block:: Python

    fig, ax = plt.subplots(figsize=(15, 10))
    sns.boxplot(
        data=transformed_laps,
        x="Team",
        y="LapTime (s)",
        hue="Team",
        order=team_order,
        palette=team_palette,
        whiskerprops=dict(color="white"),
        boxprops=dict(edgecolor="white"),
        medianprops=dict(color="grey"),
        capprops=dict(color="white"),
    )

    plt.title("2023 British Grand Prix")
    plt.grid(visible=False)

    # x-label is redundant
    ax.set(xlabel=None)
    plt.tight_layout()
    plt.show()



.. image-sg:: /examples_gallery/images/sphx_glr_plot_team_pace_ranking_001.png
   :alt: 2023 British Grand Prix
   :srcset: /examples_gallery/images/sphx_glr_plot_team_pace_ranking_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 4.434 seconds)


.. _sphx_glr_download_examples_gallery_plot_team_pace_ranking.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_team_pace_ranking.ipynb <plot_team_pace_ranking.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_team_pace_ranking.py <plot_team_pace_ranking.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
